---
name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: null
jobs:
  build:
    runs-on: ubuntu-latest
    name: Building message on push
    environment: dev
    steps:
      - name: Run a one-line script
        uses: actions/checkout@v3
        
      - name: Generate application.properties
        run: |
          echo 'aws.accessKeyId==${{ secrets.ACCESSKEYID }}' >> src/main/resources/application.properties
          echo 'aws.secretAccessKey=${{ secrets.SECRETACCESSKEY }}' >> src/main/resources/application.properties
          echo 'aws.region=${{ secrets.REGION }}' >> src/main/resources/application.properties
          echo 'spring.application.name=$APPNAME' >> src/main/resources/application.properties
          echo 'contactUsTable=$CONTACTUSTABLE' >> src/main/resources/application.properties
          echo 'contactustopicArn=$CONTACTUSTOPICARN' >> src/main/resources/application.properties
      - name: Set up java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: "17"
      - name: Build with Maven
        run: mvn clean install -Dmaven.test.skip=true
        
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
          aws-region: ${{ secrets.REGION }} # Replace with your AWS region
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v2
        with:
          context: .  # Path to the directory containing your Dockerfile
          file: ./Dockerfile  # Path to your Dockerfile
          tags: ${{ secrets.ECRURI }}:latest
      env:
        DOCKER_BUILDKIT: 1